{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/youtube.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- Page Content -->\\n<div class=\\\"container\\\">\\n\\n  <header class=\\\"bg-success text-center p-2  py-3 mb-4\\\">\\n    <div class=\\\"container\\\">\\n      <h1 class=\\\"font-weight-light text-white\\\">\\n        <i class=\\\"fab fa-youtube\\\"></i>\\n        <div class=\\\"input-group flex-nowrap\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Type...\\\" aria-label=\\\"Username\\\"\\n            aria-describedby=\\\"addon-wrapping\\\" [(ngModel)]=\\\"search\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"sea()\\\">Search</button>\\n\\n        </div>\\n      </h1>\\n      <p *ngIf=\\\"iss\\\">Search is empty</p>\\n\\n    </div>\\n  </header>\\n\\n\\n  <ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-scale-multiple\\\">\\n    <p style=\\\"font-size: 20px; color: white\\\">Loading...</p>\\n  </ngx-spinner>\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let video of videos\\\" class=\\\"col-xl-6 col-md-6 mb-4\\\">\\n      <div class=\\\"card border-0 shadow vh-50\\\">\\n        <a href=\\\"https://www.youtube.com/watch?v={{video.id.videoId}}\\\" target=\\\"_blank\\\">\\n          <img [src]=\\\"video.snippet.thumbnails.medium.url\\\" class=\\\"card-img-top\\\" alt=\\\"...\\\"></a>\\n          \\n        <div class=\\\"card-body text-center\\\">\\n          <h5 class=\\\"card-title mb-0\\\">\\n            <a href=\\\"https://www.youtube.com/watch?v={{video.id.videoId}}\\\">{{video.snippet.title}}\\n            </a>\\n          </h5>\\n          <div class=\\\"card-text text-black-50\\\">{{video.snippet.description.slice(0, 100)}}</div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <!-- /.row -->\\n\\n</div>\\n<!-- /.container -->\"","import { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { YoutubeService } from './youtube.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Pipe({ name: 'safe' })\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  videos: any[];\n  private unsubscribe$: Subject<any> = new Subject();\n  search: string | any;\n  iss: boolean = false;\n  urlSafe: SafeResourceUrl;\n  constructor(private spinner: NgxSpinnerService, \n    private youTubeService: YoutubeService,\n    private sanitizer: DomSanitizer) { }\n\n\n  ngOnInit() {\n\n  }\n  sea() {\n    if (this.search == null) {\n      this.iss = true;\n      setTimeout(() => {\n        this.iss = false;\n      }, 3000)\n    }\n    else {\n      this.spinner.show()\n      setTimeout(() => {\n        this.spinner.hide()\n      }, 3000)\n      this.videos = [];\n      this.youTubeService\n        .getVideosForChanel(this.search, 200)\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(lista => {\n          for (let element of lista[\"items\"]) {\n            this.videos.push(element)\n          }\n        });\n        this.search=null;\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer} from '@angular/platform-browser';\n@NgModule({\n  declarations: [\n    AppComponent\n    ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgxSpinnerModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YoutubeService {\n\n  apiKey : string = 'AIzaSyC7cBcKcrxjCqQjT10ZyyL2qN8TszgrEm8';\n\n  constructor(public http: HttpClient) { }\n\n  getVideosForChanel(channel, maxResults): Observable<Object> {\n    let url = 'https://www.googleapis.com/youtube/v3/search?key=' + this.apiKey + '&order=date&part=snippet&type=video&q=' + channel +'&maxResults=' + maxResults\n    return this.http.get(url)\n      .pipe(map((res) => {\n        return res;\n      }))\n  } \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}